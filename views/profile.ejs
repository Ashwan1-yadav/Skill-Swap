<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= title %> | Skill Swap</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    body { font-family: 'Inter', sans-serif; }
    .glass {
      background: rgba(255,255,255,0.8);
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.1);
      backdrop-filter: blur(4px);
    }
    .accent {
      background: linear-gradient(90deg, #6366f1 0%, #a21caf 100%);
      color: #fff;
    }
    .accent-text {
      color: #6366f1;
    }
  </style>
</head>
<body class="bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 min-h-screen flex flex-col">
  <!-- Navbar -->
  <nav class="sticky top-0 z-30 bg-white/90 shadow-md glass flex items-center justify-between px-6 py-3">
    <a href="/home" class="flex items-center gap-2 text-2xl font-bold accent-text tracking-tight">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-indigo-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" /></svg>
      Skill Swap
    </a>
    <div class="flex items-center gap-3">
      <a href="/home" class="text-gray-700 hover:accent px-3 py-1 rounded transition">Home</a>
      <a href="/profile" class="text-gray-700 hover:accent px-3 py-1 rounded transition">Profile</a>
      <a href="/requests" class="text-gray-700 hover:accent px-3 py-1 rounded transition">Requests</a>
      <a href="/send-request" class="text-gray-700 hover:accent px-3 py-1 rounded transition">Send Request</a>
      <button onclick="logout()" class="ml-2 accent px-4 py-1 rounded shadow hover:opacity-90 transition">Logout</button>
      <img src="<%= user.profilePhoto || 'https://png.pngtree.com/png-clipart/20250102/original/pngtree-user-avatar-placeholder-black-png-image_6796227.png' %>" alt="User" class="rounded-full w-8 h-8 border-2 border-indigo-200 ml-2"/>
    </div>
  </nav>

  <!-- Main Content -->
  <main class="flex items-center justify-center min-h-[70vh] py-8 flex-1">
    <div class="w-full max-w-3xl bg-white glass rounded-2xl shadow-2xl overflow-hidden">
      <!-- Header with Banner -->
      <div class="relative bg-gradient-to-r from-indigo-200 via-purple-200 to-pink-200 h-36">
        <img class="w-32 h-32 rounded-full border-4 border-white absolute -bottom-16 left-8 shadow-xl transition transform hover:scale-105 duration-300"
             src="<%= user.profilePhoto || 'https://i.pravatar.cc/150?img=12' %>" alt="User Image" id="profileImage">
      </div>
      <!-- Profile Content -->
      <div class="p-8 pt-20">
        <div class="flex justify-between items-center mb-6">
          <div>
            <h2 class="text-3xl font-bold accent-text" id="userName"><%= user.name %></h2>
            <p class="text-gray-500" id="userLocation">üìç <%= user.location %></p>
          </div>
          <button onclick="toggleEditMode()" class="accent px-5 py-2 rounded-md shadow hover:opacity-90 transition" id="editButton">
            Edit Profile
          </button>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div>
            <h3 class="text-xl font-semibold text-indigo-700 mb-2">üõ† Skills Offered</h3>
            <ul class="list-disc pl-5 space-y-1 text-gray-700" id="skillsOfferedList">
              <% user.skillsOffered.forEach(skill => { %>
                <li><%= skill %></li>
              <% }); %>
            </ul>
          </div>
          <div>
            <h3 class="text-xl font-semibold text-pink-700 mb-2">üéØ Skills Wanted</h3>
            <ul class="list-disc pl-5 space-y-1 text-gray-700" id="skillsWantedList">
              <% user.skillsWanted.forEach(skill => { %>
                <li><%= skill %></li>
              <% }); %>
            </ul>
          </div>
        </div>
        <div class="mt-8">
          <h3 class="text-xl font-semibold text-purple-700 mb-2">‚è∞ Availability</h3>
          <p class="text-gray-700" id="userAvailability"><%= user.availability %></p>
        </div>
        <div class="mt-6 flex items-center">
          <label class="flex items-center cursor-pointer">
            <div class="relative">
              <input type="checkbox" id="publicToggle" class="sr-only peer" <%= user.isPublicProfile ? 'checked' : '' %>>
              <div class="w-14 h-8 bg-gray-300 rounded-full peer-checked:bg-indigo-600 transition-all duration-300"></div>
              <div class="absolute left-1 top-1 bg-white w-6 h-6 rounded-full shadow-md transition-transform duration-300 peer-checked:translate-x-6"></div>
            </div>
            <span class="ml-3 text-gray-700">Profile is Public</span>
          </label>
        </div>
        <!-- Edit Form (Hidden by default) -->
        <div id="editForm" class="hidden mt-8 space-y-4">
          <h3 class="text-xl font-semibold accent-text">Edit Profile</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Name</label>
              <input type="text" id="editName" value="<%= user.name %>" class="w-full px-4 py-2 border border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400" />
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Location</label>
              <input type="text" id="editLocation" value="<%= user.location %>" class="w-full px-4 py-2 border border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400" />
            </div>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Skills Offered (comma separated)</label>
            <input type="text" id="editSkillsOffered" value="<%= user.skillsOffered.join(', ') %>" class="w-full px-4 py-2 border border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400" />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Skills Wanted (comma separated)</label>
            <input type="text" id="editSkillsWanted" value="<%= user.skillsWanted.join(', ') %>" class="w-full px-4 py-2 border border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400" />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Availability</label>
            <select id="editAvailability" class="w-full px-4 py-2 border border-indigo-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400">
              <option value="Weekends" <%= user.availability === 'Weekends' ? 'selected' : '' %>>Weekends</option>
              <option value="Evenings" <%= user.availability === 'Evenings' ? 'selected' : '' %>>Evenings</option>
              <option value="Weekdays" <%= user.availability === 'Weekdays' ? 'selected' : '' %>>Weekdays</option>
              <option value="Flexible" <%= user.availability === 'Flexible' ? 'selected' : '' %>>Flexible</option>
            </select>
          </div>
          <div class="flex gap-4">
            <button onclick="saveProfile()" class="accent px-6 py-2 rounded-lg font-semibold shadow hover:opacity-90 transition">Save Changes</button>
            <button onclick="cancelEdit()" class="bg-gray-300 text-gray-700 px-6 py-2 rounded-lg hover:bg-gray-400 transition">Cancel</button>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Footer -->
  <footer class="text-center py-6 text-sm text-gray-500 border-t bg-white/80 mt-auto">
    &copy; 2025 Skill Swap Platform. Crafted with <span class="text-pink-500">‚ô•</span> by the Skill Swap Team.
  </footer>

  <script>
    function logout() {
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      window.location.href = '/login';
    }

    let isEditMode = false;
    function toggleEditMode() {
      isEditMode = !isEditMode;
      const editForm = document.getElementById('editForm');
      const editButton = document.getElementById('editButton');
      if (isEditMode) {
        editForm.classList.remove('hidden');
        editButton.textContent = 'Cancel Edit';
        editButton.classList.remove('accent');
        editButton.classList.add('bg-red-600', 'text-white');
      } else {
        editForm.classList.add('hidden');
        editButton.textContent = 'Edit Profile';
        editButton.classList.remove('bg-red-600', 'text-white');
        editButton.classList.add('accent');
      }
    }
    function cancelEdit() { toggleEditMode(); }
    async function saveProfile() {
      const token = localStorage.getItem('token');
      if (!token) { alert('Please login to update profile'); return; }
      const formData = {
        name: document.getElementById('editName').value,
        location: document.getElementById('editLocation').value,
        skillsOffered: document.getElementById('editSkillsOffered').value.split(',').map(skill => skill.trim()),
        skillsWanted: document.getElementById('editSkillsWanted').value.split(',').map(skill => skill.trim()),
        availability: document.getElementById('editAvailability').value,
        isPublicProfile: document.getElementById('publicToggle').checked
      };
      try {
        const response = await fetch('/userModel/profile', {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
          body: JSON.stringify(formData)
        });
        const data = await response.json();
        if (response.ok) {
          document.getElementById('userName').textContent = formData.name;
          document.getElementById('userLocation').textContent = `üìç ${formData.location}`;
          document.getElementById('userAvailability').textContent = formData.availability;
          document.getElementById('skillsOfferedList').innerHTML = formData.skillsOffered.map(skill => `<li>${skill}</li>`).join('');
          document.getElementById('skillsWantedList').innerHTML = formData.skillsWanted.map(skill => `<li>${skill}</li>`).join('');
          const user = JSON.parse(localStorage.getItem('user'));
          user.name = formData.name;
          localStorage.setItem('user', JSON.stringify(user));
          alert('Profile updated successfully!');
          toggleEditMode();
        } else {
          alert(data.message || 'Failed to update profile');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to update profile');
      }
    }
    document.getElementById('publicToggle').addEventListener('change', async function(e) {
      const token = localStorage.getItem('token');
      if (!token) return;
      try {
        const response = await fetch('/userModel/profile', {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
          body: JSON.stringify({ isPublicProfile: e.target.checked })
        });
        if (!response.ok) {
          e.target.checked = !e.target.checked;
          alert('Failed to update profile visibility');
        }
      } catch (error) {
        console.error('Error:', error);
        e.target.checked = !e.target.checked;
        alert('Failed to update profile visibility');
      }
    });
  </script>
</body>
</html>